plugins {
    id 'java'
    id 'jacoco'
   // id 'checkstyle'
    id 'maven-publish'
    id 'io.freefair.lombok'
    id 'com.github.sherter.google-java-format'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    compile 'com.google.googlejavaformat:google-java-format:1.10.0'
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

check.dependsOn jacocoTestCoverageVerification


task format {
    dependsOn tasks.googleJavaFormat
}

task compileAndFormat {
    dependsOn compileJava, compileTestJava, format//,checkstyleMain, checkstyleTest
}

task formatAndTest {
    dependsOn compileAndFormat, test
}

task verifyAndTest {
    dependsOn test, tasks.verifyGoogleJavaFormat//, checkstyleMain, checkstyleTest
}

build.dependsOn(tasks.googleJavaFormat)
build.dependsOn(tasks.compileAndFormat)
//check.dependsOn(tasks.googleJavaFormat)

//verifyGoogleJavaFormat.dependsOn(tasks.googleJavaFormat)

googleJavaFormat {
    toolVersion = '1.9'
//    options style: 'AOSP'
}

jacoco {
    toolVersion = "0.8.6"
}


jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                minimum = 0.0 // 0.8
            }
        }
    }
}

//checkstyle {
//    toolVersion "8.41.1"
//    configFile file("${rootDir}/config/checkstyle/checkstyle.xml")
//}

//checkstyleMain {
//    source = 'src/main/java'
//}

//checkstyleTest {
//    source = 'src/test/java'
//}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/EliasLeonov/PrintScript")
            credentials {
                username = project.findProperty("gpr.user") ?: "USERNAME"
                password = project.findProperty("gpr.key") ?: "TOKEN"
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

task installGitHooks(type: Copy) {
    from file("$rootDir/config/hooks")
    into file("$rootDir/.git/hooks")
    fileMode 0777
}

build.dependsOn installGitHooks

task wrapper(type: Wrapper) {
    gradleVersion = '6.8.3'
}

test {
    useJUnitPlatform()
}
